<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Mandelbrot!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>

    <section>
        <title>Reverse engineering UML osztálydiagram</title>
        <para>
		UML osztálydiagram rajzolása az első védési C++ programhoz. Az osztálydiagramot a forrásokból
generáljuk (pl. Argo UML, Umbrello, Eclipse UML) Mutassunk rá a kompozíció és aggregáció
kapcsolatára a forráskódban és a diagramon, lásd még: https://youtu.be/Td_nlERlEOs.
https://arato.inf.unideb.hu/batfai.norbert/UDPROG/deprecated/Prog1_6.pdf (28-32 fólia)

        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
Tehat a Helló, Mandelbrot csokrunk első feladata nem máshoz mint az első védési programunkhoz
azaz a LZWbinfa c++os verziojahoz kotheto. Feladtunk hogy egy ugynevett UML Diagramot keszítsünk
a binfaból. Az UML azaz a Unidified modeling language rövidítése . Az UML egy alltanaos célú
modellező nyelv amelyet széles körben hasznalnak . Peldaul uzleti elemzők rendszertervezők 
és szoftvermérnökök is.Az UML alkalmas programrendszerek vizualis megvalósítására.
A feladat megoldásához az Umbrella nevezetű programot hasznaltam.
Itt nincs is mas dolgunk mint hogy beimportaljuk a forrást .Ezt a Code , Code Importing Wizard
menu segítségével tehetjuk meg.  Ebből a programunk el is keszíti
szamunkra a diagramot Semmifele valtoztatast nem kell csinalnunkk.
 Az importálás után az alul latható sárga négyszöget kapunk.
        </para>
        
        <para>
            <figure>
            <title>  Forrás : Sajat kep </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="veres/Lzwbinfa.png" scale="70"/>
                </imageobject>
            </mediaobject>
        </figure>
        </para>
    </section>        

      <section>
        <title>Forward engineering UML osztálydiagram</title>
        <para>
		UML-ben tervezzünk osztályokat és generáljunk belőle forrást!
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
A masodik feladatban . Az előzőhez hasonloan az UML osztálydiagrammokkal kell foglalkoznunk.
Viszont itt az előzővel ellentetben meg kell fordítanunk a folyamatot . Tehat itt az UML diagrammbol
kell letrehoznunk egy forráskódot. Letrekel hoznunk egy uj classt egy ures sarga negyszoget.
Ezen belul tudunk letrehozni kulonbozo dolgokat. En szemely szerint letrehoztam a ProgClasst 
ahol felvettem 3 valtozot 

Ebbol tudunk forrást generalni ezt egyszeruen az elozohez hasonló helyen tehetjuk meg a Code  Code
Generation Wizard helyen tudjuk itt ki kell valasztanunk hogy hova mentsen illtve ki kell valasztanunk
a nyelvet.
Ha ezt legeneraljuk 2 fajlt kapunk egy headert(.h) es egy forrás (.cpp)fajlt . Termeszetesn c++ nyelven

A diagramrol es a forráskódrol a szöveg alatt lathatunk kepeket.
        </para>
        
        <para>
            <figure>
            <title>  Forrás : Sajat kep </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="veres/progclass.png" scale="70"/>
                    
                </imageobject>
            </mediaobject>
        </figure>
        </para>
        <para>
                    <programlisting language="c"><![CDATA[
#include "ProgClass.h"
// Constructors/Destructors
//  
ProgClass::ProgClass () {
initAttributes();
}
ProgClass::~ProgClass () { }
//  
// Methods
//  
// Accessor methods
//  

// Other methods
//  
void ProgClass::initAttributes () {
}
]]></programlisting>
        </para>
    </section> 
	    <section>
        <title>Egy esettan</title>
        <para>
		A BME-s C++ tankönyv 14. fejezetét (427-444 elmélet, 445-469 az esettan) dolgozzuk fel!

        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section> 
	    <section>
        <title>BPMN</title>
        <para>
		Rajzoljunk le egy tevékenységet BPMN-ben!
https://arato.inf.unideb.hu/batfai.norbert/UDPROG/deprecated/Prog2_7.pdf (34-47 fólia)
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
A feladatunk hogy lerajzoljunk egy BPMN Tevékenységet. Amely nem mas mint egy adott folyamat  grafikus ábrázolás.
Ahogy a nevéből "Business Process Model and Notation " ered alltalaban uzlet folyamatok , modellek abrazolására
hasznalják.
a Rajzot a draw.iot hasznalva keszítettem. Itt könnnyen lehet BPMN szeruen abrazolni.
Itt van egy alap kezdes a faradsag erre tortenik egy folyamat
az hogy "Elmenni aludni" . Ezutan kovetkezik egy ellenőrzés 
nyilvan ha felkeltunk kiderül hogy sikerült e kialudnunk magunkat . Itt ketté válik a történet de akár válhatna több fele is
Tehat a faradtak vagyunk azaz igaz a feltelel akkor visszafekszünk pihenni ez mindaddig tortenik még a feltelel hamis nem lesz
ha hamis leszt azaz nem leszunk faradtak akkor elmegyunk mast csinalni 

        </para>
        
        <para>
            <figure>
            <title>  Forrás : Sajat kep </title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="veres/BMN.png" scale="70"/>
                </imageobject>
            </mediaobject>
        </figure>
        </para>
        
    </section> 
	
	    <section>
        <title>BPEL Helló, Világ! - egy visszhang folyamat</title>
        <para>
		Egy visszhang folyamat megvalósítása az alábbi teljes „videó tutoriál” alapján:
https://youtu.be/0OnlYWX2v_I

        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section> 
            <section>
        <title>TeX UML</title>
        <para>
		Valamilyen TeX-es csomag felhasználásával készíts szép diagramokat az OOCWC projektről (pl.
use case és class diagramokat).
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section> 

</chapter>                
